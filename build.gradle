plugins {
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.2'
}

group 'com.suygecu'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
    javafxVersion = '22.0.1'
}

sourceCompatibility = '22'
targetCompatibility = '22'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


application {
    mainModule = 'com.suygecu.testpepsa'
    mainClass = 'com.suygecu.testpepsa.server.ServerConnect'
}


javafx {
    version = '22.0.1'
    modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
    // JavaFX dependencies
    implementation "org.openjfx:javafx-controls:${javafxVersion}"
    implementation "org.openjfx:javafx-fxml:${javafxVersion}"

    // MySQL Connector
    implementation "mysql:mysql-connector-java:8.0.32"

    // Spring Boot dependencies
    implementation 'org.springframework.boot:spring-boot-starter'  // Основной starter для Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // Для работы с базами данных через JPA
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.netflix.graphql.dgs.codegen:graphql-dgs-codegen-gradle:6.2.1'

    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
// Для создания REST API (если понадобится)

    // JUnit dependencies for testing
    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testImplementation 'io.projectreactor:reactor-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    // Spring Boot Test for testing Spring Boot components
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
    useJUnitPlatform()
}
